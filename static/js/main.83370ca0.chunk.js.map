{"version":3,"sources":["logo.svg","Components/Images/simpBack.png","Components/Firebase.js","Actions/index.js","Login/Login.js","Components/Message/Message.js","Home/Home.js","Profile-Picture/Profile.js","Register/Register.js","Components/Navbar/Navbar.js","App.js","serviceWorker.js","Reducers/UserReducer.js","Reducers/SessionReducer.js","Reducers/index.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","setRedirectionUrl","url","type","payload","set_login_status","dispatch","a","auth","onAuthStateChanged","user","console","log","emailVerified","currentUser","e","get_user","firestore","collection","doc","uid","onSnapshot","data","Login","props","signIn","bind","state","loggedIn","error","that","this","Object","assign","setState","setUser","signOut","then","catch","preventDefault","email","document","getElementById","value","password","signInWithEmailAndPassword","code","errorMessage","message","session","logged_in","to","redirect_url","className","id","htmlFor","style","color","onClick","name","React","Component","connect","Message","photoURL","left","right","docRef","user_id","get","src","width","alt","date","Home","handleMsg","handleButton","msg","add","Name","displayName","created","FieldValue","serverTimestamp","objDiv","scrollTop","scrollHeight","key","add_messages","addEventListener","elems","querySelectorAll","M","Parallax","init","Materialbox","orderBy","querySnapshot","messages","forEach","push","prevProps","Fragment","class","require","transform","opacity","height","backgroundColor","position","top","map","item","format","toDate","onKeyPress","Profile","image","progress","handle_file_change","handle_upload","target","files","storage","ref","put","on","snapshot","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","update","accept","onChange","placeholder","Register","signUp","createUserWithEmailAndPassword","sendEmailVerification","set","updateProfile","window","location","href","for","Navbar","handleLogOut","Sidenav","data-target","exact","path","component","App","Boolean","hostname","match","initalState","UserReducer","action","SessionReducer","reducer","combineReducers","store","createStore","reducers","compose","applyMiddleware","reduxThunk","devToolsExtension","f","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83370ca0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/simpBack.be90594a.png\";","import * as firebase from \"firebase/app\";\n\n// Add the Firebase services that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBztQYs1Fmzw1MrOH8GWORisAWsxTaBIGg\",\n  authDomain: \"simpapp-d607a.firebaseapp.com\",\n  databaseURL: \"https://simpapp-d607a.firebaseio.com\",\n  projectId: \"simpapp-d607a\",\n  storageBucket: \"simpapp-d607a.appspot.com\",\n  messagingSenderId: \"541886811215\",\n  appId: \"1:541886811215:web:f754383a9317280645ae3a\",\n  measurementId: \"G-F3YWSQ3QXK\"\n};\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;","import firebase from '../Components/Firebase';\r\nimport \"firebase/firestore\";\r\n\r\nexport function setUser(user){\r\n    return {type:\"setUser\",payload:user}\r\n}\r\nexport function login(loggin){\r\n    if(loggin){\r\n        return {type:\"login\",payload:true}\r\n    }\r\n    else{\r\n        return {type:\"logout\",payload:false};\r\n    }\r\n}\r\nexport function setRedirectionUrl(url){\r\n    \r\n        return {type:\"set_redirect_url\",payload:url}\r\n    \r\n    \r\n    \r\n}\r\n// export const getDefaultProfileUrl  = () => async dispatch => {\r\n//     var storage = firebase.storage();\r\n\r\n//     // Create a storage reference from our storage service\r\n//     var storageRef = storage.ref();\r\n    \r\n    \r\n    \r\n//     // Create a child reference\r\n//     storageRef.child('images/default-avatar.png').getDownloadURL().then(function(url) {\r\n\r\n//                dispatch({type:\"getdefaultprofileurl\",payload:{imageurl:url})\r\n//     })\r\n\r\n\r\n// }\r\nexport const set_login_status  = () => async dispatch => {\r\n    try{\r\n       firebase.auth().onAuthStateChanged(function(user) {\r\n        \r\n            if (user) {\r\n            // User is signed in.\r\n            console.log(user.emailVerified)\r\n                if(user.emailVerified){\r\n                \r\n                var user = firebase.auth().currentUser;\r\n            \r\n            \r\n            \r\n                dispatch({type:\"login\",payload:true})\r\n                \r\n                }\r\n                else{\r\n                    dispatch( {type:\"logout\",payload:false})\r\n                }\r\n\r\n        \r\n            } else {\r\n            // No user is signed in.that.state.loggedIn=true;\r\n            dispatch( {type:\"logout\",payload:false});\r\n            }\r\n        });\r\n    }\r\n    catch (e) {\r\n        console.log(e)\r\n      }\r\n}\r\nexport const get_user  = () => async dispatch => {\r\n    try{\r\n       firebase.auth().onAuthStateChanged(function(user) {\r\n        \r\n            if (user) {\r\n            // User is signed in.\r\n            var db = firebase.firestore();\r\n            db.collection(\"users\").doc(user.uid)\r\n            .onSnapshot(function(doc) {\r\n                console.log(\"Current data: \", doc.data());\r\n                dispatch({type:\"setUser\",payload:doc.data()})\r\n            });\r\n        \r\n          \r\n        \r\n          \r\n            \r\n            \r\n        \r\n            }\r\n        });\r\n    }\r\n    catch (e) {\r\n        console.log(e)\r\n      }\r\n}","import React from 'react';\nimport M from 'materialize-css';\nimport firebase from '../Components/Firebase';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport {setUser,login ,set_login_status,setRedirectionUrl } from '../Actions/'\nclass Login extends React.Component{\n    constructor(props){\n        super(props);\n        this.signIn=this.signIn.bind(this);\n        this.state={loggedIn:false,error:\"\"}\n\n    }\n    componentDidMount() {\n        const that=this;\n        //that.props.dispatch(set_login_status());\n        firebase.auth().onAuthStateChanged(function(user) {\n            console.log(\"hi\")\n            if (user) {\n\n              // User is signed in.\n              if(user.emailVerified){\n              const state= Object.assign(that.state,that.props)\n             \n              that.setState(state)\n             \n              var user = firebase.auth().currentUser;\n              that.props.dispatch(setUser(user));\n              that.props.dispatch(login(true));\n              }\n              else{\n                that.state.error=\"Please verify your email\";\n                firebase.auth().signOut().then(function() {\n                \n                    // Sign-out successful.\n                  }).catch(function(error) {\n                    // An error happened.\n                  });\n              }\n              \n            //   that.state.loggedIn=true;\n            //   that.setState(that.state);\n\n          \n            } else {\n              // No user is signed in.\n            }\n          });\n     \n    }\n    signIn(e){\n        e.preventDefault();\n      \n        var email=document.getElementById(\"email\").value;\n        var password=document.getElementById(\"password\").value;\n        const that = this;\n        firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n            var user = firebase.auth().currentUser;\n            console.log(user.emailVerified)\n            if(user.emailVerified){\n            var name=document.getElementById(\"name\").value;\n          //  that.props.dispatch(setUser(user));\n           // that.props.dispatch(login(true));\n            }\n            else{\n                that.state.error=\"Please verify your email\";\n                firebase.auth().signOut().then(function() {\n                \n                    // Sign-out successful.\n                  }).catch(function(error) {\n                    // An error happened.\n                  });\n            }\n            //   that.state.loggedIn=true;\n            //   that.setState(that.state);\n\n              \n             \n          }).catch(function(error) {\n              // Handle Errors here.\n              var errorCode = error.code;\n              var errorMessage = error.message;\n              // ...\n             // console.log(errorMessage)\n              that.state.error=errorMessage;\n              that.setState(that.state);\n           //   console.log(this.state.error);\n            });\n            \n    }\n\n    render(){\n        console.log(\"logged in\")\n        if(this.props.session.logged_in){\n            console.log(this.props.session)\n            return (<Redirect to={this.props.session.redirect_url} />);\n        }else{\n            const btn_style={\n                \"backgroundColor\":\"#fff\",\n                color:\"#212121\"\n            }\n            return(\n            <div className=\"container\">\n                <div className=\"card\">\n                                <h1 className=\"header center black-text\">Login</h1>\n                                <hr></hr>\n                                <div className=\"card-content red-text\">\n                                    <p id=\"error\">{this.state.error}</p>\n                                <form>\n                                    <div className=\"row\">\n                                        <div className=\"input-field col s12\">\n                                        <input id=\"email\" type=\"email\" className=\"validate\"/>\n                                        <label htmlFor=\"email\">Email</label>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"input-field col s12\">\n                                        <input id=\"password\" type=\"password\" className=\"validate\"/>\n                                        <label htmlFor=\"password\">password</label>\n                                        </div>\n                                    </div>\n                                    <div className=\"center\">\n                                        <div className=\"input-field col s12\">\n                                            <button className=\"btn waves-effect \" style={btn_style} type =\"submit\"  onClick={this.signIn} name=\"action\">\n                                                Login\n                                            </button>\n                                                    \n                                        \n                                        </div>\n                                    </div>\n                                </form>\n                                </div>\n                            </div>\n                        </div>\n\n            )\n            }    \n    }\n}\nfunction mapStateToProps(state) {\n    console.log(state)\n    return state;\n  }\nexport default connect(mapStateToProps)(Login)\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport firebase from '../Firebase';\r\nimport \"firebase/firestore\";\r\nclass Message extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={photoURL:\"\"}\r\n    }\r\n    render(){\r\n        let left;\r\n        let right;\r\n        var db = firebase.firestore();\r\n        var docRef = db.collection(\"users\").doc(this.props.user_id);\r\n       const that =this;\r\n        docRef.get().then(function(doc) {\r\n           \r\n               // console.log(\"Document data:\", doc.data());\r\n                that.setState({photoURL:doc.data().photoURL})\r\n               \r\n            \r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n        if (this.props.user_id!=this.props.user.user_id) {\r\n      \r\n         left =(<div className=\"name \">\r\n                    \r\n            <img src={this.state.photoURL} style={{width:\"40px\"}} alt=\"\" className=\"circle  z-depth-4\"></img><br></br>\r\n            <span className=\"title \">{this.props.name}</span>\r\n        \r\n            </div>);\r\n        }\r\n        else{\r\n            left =\"\";\r\n        }\r\n        if (this.props.user_id==this.props.user.user_id) {\r\n            right =(<div className=\"name\">\r\n                       \r\n               <img src={this.props.user.photoURL} style={{width:\"40px\"}} alt=\"\" className=\"circle  z-depth-4\"></img><br></br>\r\n               <span className=\"title \">{this.props.name}</span>\r\n           \r\n               </div>);\r\n           }\r\n           else{\r\n               right =\"\";\r\n           }\r\n            return( \r\n               \r\n                \r\n                 \r\n                        \r\n                        <div className={this.props.user_id==this.props.user.user_id?\"box-gray-self \":\"box-gray \"}>\r\n                        {left}\r\n                        \r\n                        <div className=\"message-body z-depth-4\">\r\n                            \r\n                        <p>{this.props.message}</p>\r\n\r\n                       \r\n                        <div className=\"\">\r\n                    ({this.props.date})\r\n\r\n                        </div>\r\n                        </div>\r\n                        {right}\r\n                          \r\n                        </div>\r\n                   \r\n            \r\n                \r\n                 \r\n            )\r\n      \r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n   // console.log(state)\r\n    return state;\r\n  }\r\nexport default connect(mapStateToProps)(Message)","import React from 'react';\r\nimport M from 'materialize-css';\r\nimport { Redirect } from 'react-router';\r\nimport firebase from '../Components/Firebase';\r\nimport \"firebase/firestore\";\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport {setUser,login ,get_user,set_login_status,setRedirectionUrl } from '../Actions/'\r\nimport Message from '../Components/Message/Message';\r\nclass Home extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.handleMsg= this.handleMsg.bind(this)\r\n        this.handleButton= this.handleButton.bind(this)\r\n        this.state={\r\n            \"messages\":[\r\n                \r\n        \r\n        \r\n        ],\r\n        logged_in:true,\r\n        user:null\r\n\r\n    }\r\n    \r\n\r\n    }\r\n    add_messages(msg){\r\n        var db = firebase.firestore();\r\n            \r\n        db.collection(\"messages\").add({\r\n            Name:this.props.user.displayName,\r\n            message:msg,\r\n            user_id:this.props.user.user_id,\r\n            created:firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        .then(function(docRef) {\r\n            //console.log(\"Document written with ID: \", docRef.id);\r\n            var objDiv = document.getElementById(\"message_div\");\r\nobjDiv.scrollTop = objDiv.scrollHeight;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(\"Error adding document: \", error);\r\n        });\r\n        \r\n    }\r\n    handleMsg(e){\r\n  \r\n        if(e.key === 'Enter'){\r\n           var message=document.getElementById(\"msg_inp\").value;\r\n          this.add_messages(message);\r\n        }\r\n    }\r\n    handleButton(e){\r\n        e.preventDefault();\r\n        var message=document.getElementById(\"msg_inp\").value;\r\n        this.add_messages(message);\r\n    }\r\n    componentDidMount (){\r\n        \r\n        //console.log(\"t\" +this.state)\r\n        this.props.dispatch(set_login_status())\r\n        this.props.dispatch(get_user());\r\n        document.addEventListener('DOMContentLoaded', function() {\r\n            //console.log(\"test\")\r\n            var elems = document.querySelectorAll('.parallax');\r\n            var instances = M.Parallax.init(elems, 0);\r\n          });\r\n          var elems = document.querySelectorAll('.parallax');\r\n          var instances = M.Parallax.init(elems, 0);\r\n        \r\n          \r\n        document.addEventListener('DOMContentLoaded', function() {\r\n            var elems = document.querySelectorAll('.materialboxed');\r\n            var instances = M.Materialbox.init(elems,0);\r\n        });\r\n\r\n        const that=this;\r\n      \r\n      \r\n        \r\n        const state= Object.assign(that.state,that.props)\r\n        state.session.logged_in=that.props.session.logged_in;\r\n      //  console.log(state)\r\n        that.setState(state)\r\n     //  console.log(that.state.session.logged_in)\r\n      \r\n          var db = firebase.firestore();\r\n          db.collection(\"messages\").orderBy(\"created\").onSnapshot(function(querySnapshot) {\r\n        var messages = [];\r\n        querySnapshot.forEach(function(doc) {\r\n            messages.push({id: doc.id,user_id:doc.data().user_id,\"name\":doc.data().Name,\"message\":doc.data().message,\"created\":doc.data().created});\r\n           \r\n        });\r\n       \r\n        that.state.messages=messages;\r\n        that.setState(that.state)\r\n        var objDiv = document.getElementById(\"message_div\");\r\n        objDiv.scrollTop = objDiv.scrollHeight;\r\n       \r\n     \r\n\r\n    \r\n    });\r\n\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        \r\n        if(this.props.session.logged_in!=prevProps.session.logged_in||prevProps.user.displayName!=this.state.user.displayName ){\r\n          \r\n            const state= Object.assign(this.state,this.props)\r\n    \r\n            this.setState(state)\r\n            //console.log(this.state)\r\n        }\r\n      \r\n      \r\n\r\n        \r\n    }\r\n    render(){\r\n        if(this.props.session.logged_in===true){\r\n           // console.log(this.props.session.logged_in)\r\n            const paralax_style={\r\n                transform: \"translate3d(-50%, 355.605px, 0px)\",\r\n                opacity: 1\r\n            }\r\n            const mask={\r\n                width:\"100%\",\r\n                height:\"100%\",\r\n                opacity:0.7,\r\n                backgroundColor:\"white\",\r\n                position:\"absolute\",\r\n                top:\"0\"\r\n            }\r\n\r\n            return(\r\n                <React.Fragment>\r\n                <div class=\"parallax-container\">\r\n                \r\n                    <div class=\"parallax\"><img class=\"materialboxed\" src={require('../Components/Images/simpBack.png')} style={paralax_style}></img><div class=\"mask\" style={mask}>\r\n                    <h1 className =\"header center black-text\">SimpChat </h1>\r\n                    <h2 className=\"center\">{this.state.user !=null?\"Hello \" +this.state.user.displayName:\"\"} Time to get your simp up!!!</h2>\r\n                    </div>\r\n                    </div>\r\n                </div> \r\n                <section class=\"section grey-bg\">\r\n                \r\n                <div className=\"container white z-depth-4\">\r\n                    <div className=\"card\">\r\n                    <h2 className=\" header center\">Chat</h2>\r\n                    <div class=\"card-content\">\r\n                    <div className=\"messages\" id=\"message_div\">\r\n                    <br></br>\r\n              \r\n                    {this.state.messages.map( (item)=>{\r\n                        const msg=item.message;\r\n                            \r\n                        \r\n                        return(\r\n\r\n                            <Message key= {item.id} name={item.name} user_id={item.user_id} message ={item.message} date={(<Moment format=\"YYYY/MM/DD hh:mm:ss\">\r\n                            {item.created!=null? item.created.toDate(\" HH:mm:ss\"):\"\"}\r\n                              </Moment>)}/>\r\n     \r\n                         \r\n                        )\r\n                    })}\r\n                    </div>\r\n                    \r\n                    {/* <div className=\"row\">\r\n                        <div className=\"col s1\"></div>\r\n                        <div className=\"col s10\"> */}\r\n                            <div className=\"messageInput\">\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field suffix col s12 black-text\">\r\n                                <input onKeyPress={this.handleMsg} id=\"msg_inp\" className=\"validate send\"></input>\r\n                            \r\n                                \r\n                                <a onClick ={this.handleButton} class=\"btn-floating btn-large waves-effect waves-light blue\"><i className=\"material-icons\">send</i></a>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                       \r\n                         {/* </div>  \r\n                         <div className=\"col s1\"></div> \r\n                    </div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </section>\r\n                </React.Fragment>\r\n            \r\n\r\n            )\r\n        }\r\n        else{\r\n            this.props.dispatch(setRedirectionUrl(\"/shimpchat\"))\r\n            return (<Redirect to=\"/login\" />);\r\n        }\r\n         \r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n  //  console.log(state)\r\n    return state;\r\n  }\r\nexport default connect(mapStateToProps)(Home)\r\n\r\n","import React from 'react';\nimport firebase from '../Components/Firebase';\nimport 'firebase/storage'; \nimport { connect } from 'react-redux';\n\nimport \"firebase/firestore\";\nimport { Redirect } from 'react-router';\n\nimport {setUser,login ,get_user,set_login_status,setRedirectionUrl } from '../Actions/'\nclass Profile extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={image:null,\n        progress:0};\n        this.handle_file_change=this.handle_file_change.bind(this);\n        this.handle_upload=this.handle_upload.bind(this);\n    }\n  \n    handle_file_change(e){\n        const image=e.target.files[0];\n        this.setState({...this.state,\"image\":image});\n    }\n    handle_upload(e){\n        console.log(\"heel\")\n        let image=this.state.image;\n        const that =this;\n        var storage = firebase.storage();\n        const uploadTask = storage.ref(`images/${this.state.image.name}`).put(this.state.image);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        // progress function ...\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        that.setState({ ...that.state,progress });\n        console.log(that.state.progress)\n      },\n      error => {\n        // Error function ...\n        console.log(error);\n      },\n      () => {\n        // complete function ...\n        storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then(url => {\n           \n           let db= firebase.firestore();\n           var userRef = db.collection(\"users\").doc(this.props.user.user_id);\n\n\n                return userRef.update({\n                    photoURL:url\n                })\n                .then(function() {\n                    console.log(\"Document successfully updated!\");\n                })\n                .catch(function(error) {\n                    // The document probably doesn't exist.\n                    console.error(\"Error updating document: \", error);\n                });\n           \n            ;\n          });\n      })\n    }\n    componentDidMount (){\n        \n        console.log(\"t\" +this.state)\n        this.props.dispatch(set_login_status())\n        this.props.dispatch(get_user());\n    \n\n        const that=this;\n      \n      \n        \n        const state= Object.assign(that.state,that.props)\n        state.session.logged_in=that.props.session.logged_in;\n        that.setState(state)\n        console.log(\"t\" +this.state)\n      \n\n\n    }\n    componentDidUpdate(prevProps) {\n        \n        if(this.props.session.logged_in!=prevProps.session.logged_in||prevProps.user.displayName!=this.state.user.displayName ){\n          \n            const state= Object.assign(this.state,this.props)\n    \n            this.setState(state)\n            console.log(this.state)\n        }\n      \n      \n\n        \n    }\n    render(){\n        const btn_style={\n            \"backgroundColor\":\"#fff\",\n            color:\"#212121\"\n        }\n        const upload_btn_style={\n            \"backgroundColor\":\"rgba(54, 162, 255, 0.77)\",\n            color:\"#212121\"\n        }\n        \n        if(this.props.session.logged_in===true){\n            return(\n            <div className=\"bg1\">\n                <div className=\"container\">\n                <div className=\"card\">\n                                <h1 className=\"header center black-text\">Upload your Profile picture</h1>\n                                <hr></hr>\n                                <div className=\"card-content black-text\">\n                                \n                                <span className=\"center green-text\"> {this.state.progress==100?\"Profile Picture Successfully updated\":\"\"} </span >\n                                <div className=\"progress\">\n      <div className=\"determinate\" style={{\"width\":this.state.progress+\"%\" }}></div>\n  </div>\n \n                                <div className = \"row\">\n                    <label>Upload your picture</label>\n                    <div className = \"file-field input-field\">\n                        <div className = \"btn\" style={upload_btn_style}>\n                            <span >Browse</span>\n                            <input type = \"file\"  accept=\"image/*\" onChange={this.handle_file_change} />\n                        </div>\n                        \n                        <div className = \"file-path-wrapper\">\n                            <input className = \"file-path validate\" type = \"text\"\n                                placeholder = \"Upload file\" />\n                        </div>\n                    </div>\n                    </div>\n                                    <div className=\"center\">\n                                        <div className=\"input-field col s12\">\n                                            <button className=\"btn waves-effect \" style={btn_style}  onClick={this.handle_upload} name=\"action\">\n                                            Upload\n                                            </button>\n                                                    \n                                        \n                                        </div>\n                                    </div>\n                           \n                                </div>\n                            </div>\n                        </div>\n                 </div>       \n        \n            )\n        }\n        else{\n            this.props.dispatch(setRedirectionUrl(\"/profile-picture\"))\n            return (<Redirect to=\"/login\" />);\n        }\n    }\n}\n\n\n\n  function mapStateToProps(state) {\n    console.log(state)\n    return state;\n  }\n\nexport default connect(mapStateToProps)(Profile)\n","import React from 'react';\r\nimport M from 'materialize-css';\r\nimport firebase from '../Components/Firebase';\r\nimport 'firebase/storage'; \r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport {setUser,login  } from '../Actions/'\r\nclass Register extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.signUp=this.signUp.bind(this);\r\n        this.state={loggedIn:false,\"error\":\"\"}\r\n\r\n    }\r\n    componentDidMount() {\r\n       \r\n        const that=this;\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n          \r\n            if (user) {\r\n              // User is signed in.\r\n             \r\n              var user = firebase.auth().currentUser;\r\n              var name=document.getElementById(\"name\").value;\r\n              \r\n           \r\n\r\n          \r\n            } else {\r\n              // No user is signed in.\r\n            }\r\n          });\r\n     \r\n    }\r\n    signUp(e){\r\n        e.preventDefault();\r\n        const  that = this;\r\n        var email=document.getElementById(\"email\").value;\r\n        var password=document.getElementById(\"password\").value;\r\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(function () {\r\n          that.state.error=\"\";\r\n            that.setState(that.state);\r\n            firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\r\n              var user = firebase.auth().currentUser;\r\n              var name=document.getElementById(\"name\").value;\r\n              user.sendEmailVerification();\r\n              var storage = firebase.storage();\r\n\r\n              \r\n                  var storageRef = storage.ref();\r\n                  \r\n                  \r\n                  \r\n                  // Create a child reference\r\n                  storageRef.child('images/default-avatar.png').getDownloadURL().then(function(url) {\r\n                    var db = firebase.firestore();\r\n            \r\n                    db.collection(\"users\").doc(user.uid).set({\r\n                      displayName:name,  \r\n                        user_id:user.uid,\r\n                        photoURL:url,\r\n                        created:firebase.firestore.FieldValue.serverTimestamp()\r\n                    })\r\n                    .then(function(docRef) {\r\n                       // console.log(\"Document written with ID: \", docRef.id);\r\n                        user.updateProfile({\r\n                          displayName: name,\r\n                          photoURL:url\r\n                        }).then(function() {\r\n                        \r\n                            \r\n                          //this.props.dispatch(login(true));\r\n                         // that.state.loggedIn=true;\r\n                         \r\n                          //that.setState(that.state);\r\n                          firebase.auth().signOut().then(function() {\r\n                          \r\n                            // Sign-out successful.\r\n                          }).catch(function(error) {\r\n                            // An error happened.\r\n                          });\r\n                          console.log(\"usern\" + user.displayName)\r\n                          window.location.href=\"/login\"\r\n                          // window.location.href(\"localhost:3000/\")\r\n                          // Update successful.\r\n                        }).catch(function(error) {\r\n                          // An error happened.\r\n                        })\r\n     \r\n                    })\r\n                    .catch(function(error) {\r\n                        console.error(\"Error adding document: \", error);\r\n                    });\r\n                   \r\n                  })\r\n              \r\n                \r\n               \r\n            }).catch(function(error) {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                // ...\r\n                console.log(errorMessage)\r\n                that.state.error=errorMessage;\r\n                that.setState(that.state);\r\n                \r\n              });\r\n              \r\n            \r\n        }).catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            console.log(\"h\"+errorMessage)\r\n            that.state.error=errorMessage;\r\n            that.setState(that.state);\r\n            console.log(that.state.error);\r\n            // ...\r\n          });\r\n       \r\n    }\r\n\r\n    render(){\r\n        console.log(this.state)\r\n        const btn_style={\r\n            \"backgroundColor\":\"#fff\",\r\n            color:\"#212121\"\r\n        }\r\n        if(this.state.loggedIn){\r\n            console.log(\"logged in\")\r\n            return (<Redirect to=\"/shimpchat\" />);\r\n        }else{\r\n            return(\r\n            <div class=\"container\">\r\n                <div class=\"card\">\r\n                                <h1 className=\"header center black-text\">Register</h1>\r\n                                <hr></hr>\r\n                                <div className=\"card-content red-text\">\r\n                                    <p id=\"error\">{this.state.error}</p>\r\n                                <form>\r\n\r\n                                <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                        <input id=\"name\" type=\"text\" className=\"validate\"/>\r\n                                        <label for=\"name\">name</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                        <input id=\"email\" type=\"email\" className=\"validate\"/>\r\n                                        <label for=\"email\">Email</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                        <input id=\"password\" type=\"password\" className=\"validate\"/>\r\n                                        <label for=\"password\">password</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"center\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <button className=\"btn waves-effect \" style={btn_style} type =\"submit\"  onClick={this.signUp} name=\"action\">\r\n                                            Register\r\n                                            </button>\r\n                                                    \r\n                                        \r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n            )\r\n            }\r\n    }\r\n    \r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      user: state.user,\r\n      logged_in:state.logged_in\r\n      \r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Register)\r\n","import React from 'react';\r\nimport M from 'materialize-css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Home from '../../Home/Home';\r\nimport Login from '../../Login/Login';\r\nimport Profile from '../../Profile-Picture/Profile';\r\nimport Register from '../../Register/Register';\r\nimport firebase from'../Firebase';\r\nclass Navbar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleLogOut=this.handleLogOut.bind(this);\r\n        this.state={loggedIn:false};\r\n    }\r\n    handleLogOut(e){\r\n        e.preventDefault();\r\n        const that=this;\r\n        firebase.auth().signOut().then(function() {\r\n            that.state.loggedIn=false;\r\n                  that.setState(that.state);\r\n            // Sign-out successful.\r\n          }).catch(function(error) {\r\n            // An error happened.\r\n          });\r\n    }\r\n    componentDidMount() {\r\n\r\n        document.addEventListener('DOMContentLoaded', function() {\r\n            var elems = document.querySelectorAll('.sidenav');\r\n            var instances = M.Sidenav.init(elems, 0);\r\n          });\r\n         \r\n            const that=this;\r\n            firebase.auth().onAuthStateChanged(function(user) {\r\n                console.log(\"hi\")\r\n                if (user) {\r\n                  // User is signed in.\r\n                \r\n                 \r\n                  var user = firebase.auth().currentUser;\r\n             \r\n                  that.state.loggedIn=true;\r\n                  that.setState(that.state);\r\n    \r\n              \r\n                } else {\r\n                  // No user is signed in.\r\n                }\r\n              });\r\n         \r\n   \r\n    }\r\n    render(){\r\n        return(\r\n            <Router>\r\n\r\n            <nav className=\" blue darken-3\">\r\n                <div className=\"nav-wrapper\">\r\n                  <a href=\"#!\" className=\"brand-logo\">Logo</a>\r\n                  <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\r\n                  <ul className=\"right hide-on-med-and-down\">\r\n                    <li><Link to={'/shimpchat'}>home</Link> </li>\r\n                    {!this.state.loggedIn?( <li><Link to={'/login'}>login</Link></li>):\"\"}\r\n                    <li><Link to={'/Register'}>Register</Link></li>\r\n                 \r\n                    <li><Link to={'/profile-picture'}>Profile</Link></li>\r\n                    {!this.state.loggedIn?\"\":( <li><a href=\"\" onClick={this.handleLogOut}>logout</a></li>) }\r\n                   \r\n                  </ul>\r\n                </div>\r\n              </nav>\r\n            \r\n              <ul className=\"sidenav\" id=\"mobile-demo\">\r\n              <li><Link to={'/shimpchat'}>home</Link> </li>\r\n                    <li><Link to={'/login'}>login</Link></li>\r\n                <li><a href=\"collapsible.html\">Javascript</a></li>\r\n                <li><a href=\"mobile.html\">Mobile</a></li>\r\n              </ul>\r\n              <Switch>\r\n              <Route exact path='/shimpchat' component={Home} />\r\n              <Route path='/login' component={Login} />\r\n              <Route path='/profile-picture' component={Profile} />\r\n              <Route path='/Register' component={Register} />\r\n          </Switch>\r\n\r\n              </Router>\r\n\r\n\r\n\r\n\r\n        )\r\n\r\n    }\r\n}\r\nexport default Navbar;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './Login/Login';\nimport Navbar from './Components/Navbar/Navbar';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Navbar/>\n   \n    <div className=\"container\">\n     \n \n    </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nconst initalState={}\nfunction UserReducer(state=initalState,action){\n    switch (action.type) {\n        case 'setUser':\n            return  action.payload\n            break;\n        case 'getdefaultprofileurl':\n            return [...state,action.payload]\n            break\n    \n        default:\n            return state;\n            break;\n    }\n}\nexport default UserReducer;","\r\nconst initalState={\"logged_in\":false,\"redirect_url\":\"/shimpchat\"};\r\nfunction SessionReducer(state=initalState,action){\r\n    switch (action.type) {\r\n        case 'login':\r\n          return {...state,\"logged_in\":true};\r\n            break;\r\n            \r\n        case 'logout':\r\n            return {...state,\"logged_in\":false};\r\n            break;\r\n        case 'set_redirect_url':\r\n            return {...state,\"redirect_url\":action.payload};\r\n            break;\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\nexport default SessionReducer;","import {combineReducers} from 'redux';\r\nimport UserReducer from  './UserReducer';\r\nimport SessionReducer from  './SessionReducer';\r\nconst reducer = combineReducers({\r\nuser:UserReducer,session:SessionReducer\r\n});\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware,compose} from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './Reducers';\nconst store = createStore(\n  reducers, {},\n  compose(\n    applyMiddleware(reduxThunk),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n  )\n );\nReactDOM.render(\n<Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}